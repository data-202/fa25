{
  "hash": "c66e9beae89b8b92267bd20a8addec35",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DATA 202 - Analysis of Yahoo! News Poll\"\nauthor: \"FirstName LastName\"\ndate: \"Week 7\"\noutput: html_document\neditor_options:\n    chunk_output_type: console\n---\n\n\n\n\n\n\n\n# Libraries and packages\n\nLoad the libraries we needed. Be sure to `install.packages()` where needed.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(critstats)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n:::\n\n\n\n\n\n# Yahoo! News Poll\n\nThe Yahoo! News Race and Justice poll was conducted in 2020 after the killing of George Floyd. There is pre-loaded data set located in R. A complete description of the data is as follows:\n\n> Results from a Yahoo! News poll conducted by YouGov on May 29-31, 2020. In total 1060 U.S. adults were asked a series of questions regarding race and justice in the wake of the killing of George Floyd by a police officer. Results in this data set are percentages for the question, “Do you think Blacks and Whites receive equal treatment from the police?” For this particular question there were 1059 respondents.\n\n# Data\n\n## Load the data from github\n\nWe'll use data on the gender pay gap that I have prepared for today's discussion.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyahoo <- critstats::yahoo_data\n```\n:::\n\n\n\n\n\n## View\n\nView a summary of the data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(yahoo)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   race_eth           response        \n Length:1059        Length:1059       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n```\n\n\n:::\n:::\n\n\n\n\n\nAlternatively, you can use `View(yaho)` to see the data frame in a separate window.\n\n# Explore\n\n## Glimpse\n\nTake a glimpse of the data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(yahoo)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,059\nColumns: 2\n$ race_eth <chr> \"White\", \"White\", \"White\", \"White\", \"White\", \"White\", \"White\"…\n$ response <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\"…\n```\n\n\n:::\n:::\n\n\n\n\n\n## Head / Tail\n\nView the top (head) and bottom (tail) of the data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(yahoo)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  race_eth response\n  <chr>    <chr>   \n1 White    Yes     \n2 White    Yes     \n3 White    Yes     \n4 White    Yes     \n5 White    Yes     \n6 White    Yes     \n```\n\n\n:::\n\n```{.r .cell-code}\ntail(yahoo)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  race_eth response\n  <chr>    <chr>   \n1 Other    Not sure\n2 Other    Not sure\n3 Other    Not sure\n4 Other    Not sure\n5 Other    Not sure\n6 Other    Not sure\n```\n\n\n:::\n:::\n\n\n\n\n\n## Counts and proportions\n\nCreate a table of variable counts.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(yahoo$race_eth)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   Black Hispanic    Other    White \n     101      104       82      772 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(yahoo$response)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n      No Not sure      Yes \n     700      123      236 \n```\n\n\n:::\n:::\n\n\n\n\n\nCreate a table of variable proportions\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.table(table(yahoo$race_eth))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     Black   Hispanic      Other      White \n0.09537299 0.09820585 0.07743154 0.72898961 \n```\n\n\n:::\n\n```{.r .cell-code}\nprop.table(table(yahoo$response))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n       No  Not sure       Yes \n0.6610009 0.1161473 0.2228517 \n```\n\n\n:::\n:::\n\n\n\n\n\n## Visualize\n\nStart with the plot outline.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(yahoo)\n```\n\n::: {.cell-output-display}\n![](yahoo_data_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\nAdd the variable categories to the plot using aesthetics (aes).\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(yahoo, aes(x = race_eth))\n```\n\n::: {.cell-output-display}\n![](yahoo_data_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\nAdd bars to the plot using plus (+) geom_bar().\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(yahoo, aes(x = race_eth)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](yahoo_data_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\nWe can improve this plot with some additional code.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(yahoo, aes(x = race_eth, fill = race_eth)) +\n  geom_bar(width = 0.7, color = \"black\") +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(x = \"Race/Ethnicity\", y = \"Count\", title = \"Distribution of Race/Ethnicity\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(hjust = 0.5, face = \"bold\")\n  ) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.1)))\n```\n\n::: {.cell-output-display}\n![](yahoo_data_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n\nWe can also add counts to our bars.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(yahoo, aes(x = race_eth, fill = race_eth)) +\n  geom_bar(width = 0.7, color = \"black\") +\n  geom_text(stat = \"count\", aes(label = after_stat(count)), \n            vjust = -0.5, color = \"black\", size = 3.5) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(x = \"Race/Ethnicity\", y = \"Count\", title = \"Distribution of Race/Ethnicity\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(hjust = 0.5, face = \"bold\")\n  ) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.15)))\n```\n\n::: {.cell-output-display}\n![](yahoo_data_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n\n------------------------------------------------------------------------\n\n# Analysis\n\nLoad the descr and Hmisc libraries. Install packages as needed.\n\n`descr` and `Hmisc` contain useful functions to analyze social science data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"descr\")\n#install.packages(\"Hmisc\")\nlibrary(descr)\nlibrary(Hmisc)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'Hmisc'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n```\n\n\n:::\n:::\n\n\n\n\n\nPass the Yahoo! News Poll data frame to `df`.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- yahoo # set the yahoo_data to df\n```\n:::\n\n\n\n\n\nRename the `race_eth` variable to `race`.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df %>% \n  rename(\"race\" = \"race_eth\") # rename the race_eth variable to race\n```\n:::\n\n\n\n\n\n## Sample size\n\nGet a count of the sample size.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1  1059\n```\n\n\n:::\n:::\n\n\n\n\n\n## Relative frequencies\n\nGet relative frequencies by the `race` variable.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  count(race) %>% \n  mutate(prop = prop.table(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  race         n   prop\n  <chr>    <int>  <dbl>\n1 Black      101 0.0954\n2 Hispanic   104 0.0982\n3 Other       82 0.0774\n4 White      772 0.729 \n```\n\n\n:::\n:::\n\n\n\n\n\nGet relative frequencies by the `responce` variable.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  count(response) %>% \n  mutate(prop = prop.table(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  response     n  prop\n  <chr>    <int> <dbl>\n1 No         700 0.661\n2 Not sure   123 0.116\n3 Yes        236 0.223\n```\n\n\n:::\n:::\n\n\n\n\n\n## Crosstab\n\nGet a crosstab of the `race` and `response` variables.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrosstab(df$response, df$race, plot=F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Cell Contents \n|-------------------------|\n|                   Count | \n|-------------------------|\n\n=======================================================\n               df$race\ndf$response    Black   Hispanic   Other   White   Total\n-------------------------------------------------------\nNo                92         75      47     486     700\n-------------------------------------------------------\nNot sure           3         14      21      85     123\n-------------------------------------------------------\nYes                6         15      14     201     236\n-------------------------------------------------------\nTotal            101        104      82     772    1059\n=======================================================\n```\n\n\n:::\n:::\n\n\n\n\n\nStandardize the frequencies.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrosstab(df$response, df$race, plot=F, prop.c=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Cell Contents \n|-------------------------|\n|                   Count | \n|          Column Percent | \n|-------------------------|\n\n=======================================================\n               df$race\ndf$response    Black   Hispanic   Other   White   Total\n-------------------------------------------------------\nNo               92         75      47     486     700 \n               91.1%      72.1%   57.3%   63.0%        \n-------------------------------------------------------\nNot sure          3         14      21      85     123 \n                3.0%      13.5%   25.6%   11.0%        \n-------------------------------------------------------\nYes               6         15      14     201     236 \n                5.9%      14.4%   17.1%   26.0%        \n-------------------------------------------------------\nTotal           101        104      82     772    1059 \n                9.5%       9.8%    7.7%   72.9%        \n=======================================================\n```\n\n\n:::\n:::\n\n\n\n\n\nCreate a crosstab with raw frequencies.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrosstab(df$response, df$race, plot=F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Cell Contents \n|-------------------------|\n|                   Count | \n|-------------------------|\n\n=======================================================\n               df$race\ndf$response    Black   Hispanic   Other   White   Total\n-------------------------------------------------------\nNo                92         75      47     486     700\n-------------------------------------------------------\nNot sure           3         14      21      85     123\n-------------------------------------------------------\nYes                6         15      14     201     236\n-------------------------------------------------------\nTotal            101        104      82     772    1059\n=======================================================\n```\n\n\n:::\n:::\n\n\n\n\n\nGather the expected values.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrosstab(df$response, df$race,\n         expected=T, #Add expected frequency to each cell\n         plot=F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Cell Contents \n|-------------------------|\n|                   Count | \n|         Expected Values | \n|-------------------------|\n\n=======================================================\n               df$race\ndf$response    Black   Hispanic   Other   White   Total\n-------------------------------------------------------\nNo                92         75      47     486     700\n                66.8       68.7    54.2   510.3        \n-------------------------------------------------------\nNot sure           3         14      21      85     123\n                11.7       12.1     9.5    89.7        \n-------------------------------------------------------\nYes                6         15      14     201     236\n                22.5       23.2    18.3   172.0        \n-------------------------------------------------------\nTotal            101        104      82     772    1059\n=======================================================\n```\n\n\n:::\n:::\n\n\n\n\n\nAdd the chi-square contributions.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrosstab(df$response, df$race,\n         expected=T, #Add expected frequency to each cell\n         prop.chisq = T, #Total contribution of each cell \n         plot=F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Cell Contents \n|-------------------------|\n|                   Count | \n|         Expected Values | \n| Chi-square contribution | \n|-------------------------|\n\n=========================================================\n               df$race\ndf$response     Black   Hispanic    Other   White   Total\n---------------------------------------------------------\nNo                 92         75       47     486     700\n                 66.8       68.7     54.2   510.3        \n                9.542      0.569    0.957   1.156        \n---------------------------------------------------------\nNot sure            3         14       21      85     123\n                 11.7       12.1      9.5    89.7        \n                6.498      0.305   13.828   0.243        \n---------------------------------------------------------\nYes                 6         15       14     201     236\n                 22.5       23.2     18.3   172.0        \n               12.107      2.885    1.000   4.874        \n---------------------------------------------------------\nTotal             101        104       82     772    1059\n=========================================================\n```\n\n\n:::\n:::\n\n\n\n\n\nCalculate your degrees of freedom:\n\n$$ \ndf_{\\chi^2} = (r-1)(c-1)\n$$ Where `r` equals the number of rows and `c` equals the number of columns.\n\nIn our case we have $r = 3$ and $c=4$, so we get:\n\n$$ \ndf_{\\chi^2} = (3-1)(4-1) = (2)(3) = 6\n$$\n\nUse the chi-square critical values.\n\nGather the critical value of chi-square.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqchisq(.05, 6, lower.tail=F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 12.59159\n```\n\n\n:::\n:::\n\n\n\n\n\nTake note of the $6$ in our code; that will change based on your analysis.\n\nGet the chi-square statistic.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchisq.test(df$response, df$race)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's Chi-squared test\n\ndata:  df$response and df$race\nX-squared = 53.964, df = 6, p-value = 7.5e-10\n```\n\n\n:::\n:::\n\n\n\n\n\nFrom here you want to critically interpret your values.\n",
    "supporting": [
      "yahoo_data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}